
package picturehouse.views;

import java.text.SimpleDateFormat;
import java.util.List;
import javax.swing.AbstractListModel;
import javax.swing.JOptionPane;
import org.javalite.activejdbc.Base;
import picturehouse.PictureHouse;
import picturehouse.controllers.TicketBookingController;
import picturehouse.models.Movie;
import picturehouse.models.Screening;
import picturehouse.models.TicketBooking;

/**
 *
 * @author sevabaskin
 */
public class PrintTicketsPanel extends javax.swing.JPanel {
    private PictureHouse app;
    private MainFrame parentFrame;
    private TicketListData ticketListData;

    /**
     * Creates new form PrintTicketsPanel
     */
    public PrintTicketsPanel() {
        initComponents();
    }
    
    public PrintTicketsPanel(PictureHouse app, MainFrame parentFrame) {
        initComponents();
        this.app = app;
        this.parentFrame = parentFrame;
        this.ticketListData = new TicketListData();
        this.ticketsJList.setModel(ticketListData);
    }
    
    public void updateView() {
        reloadTicketsJList();
    }
    private void reloadTicketsJList() {
        // reload data from DB into ticketListData
        ticketListData.resetTicketsListData();
        // repaint screeningsJList with fresh data
        ticketsJList.setSelectedIndex(0);
        ticketsJList.updateUI();
    }
    
    class TicketListData extends AbstractListModel {
        public String[] strings;
        String[] ticketNamesArray;
        List<TicketBooking> ticketsList;
        String noTicketsBookedMsg = "No tickets have been booked yet.";

        public TicketListData() {
            strings = new String[0];
        }
        void loadTicketsList() {
            Base.open("com.mysql.jdbc.Driver", "jdbc:mysql://db4free.net:3306/picturehouse", "picturehouse", "65CEerFwXESQmL9nDaE");
            // load tickets for current user
            TicketBookingController controller = new TicketBookingController();
            ticketsList = controller.returnUnprintedTickets(app.getCurrentCustomer().getInteger("id"));
            // convert tickets to strings
            if (ticketsList.isEmpty()) {
                ticketNamesArray = new String[1];
                ticketNamesArray[0] = noTicketsBookedMsg;
                printTicketButton.setEnabled(false);
            } else {
                printTicketButton.setEnabled(true);
                ticketNamesArray = new String[ticketsList.size()];
                String screeningDate;
                Screening screening;
                String movieTitle;
                for (int i = 0; i < ticketsList.size(); i++) {
                    screening = Screening.findById(ticketsList.get(i).getInteger("screening_id"));
                    movieTitle = Movie.findById(screening.getInteger("movie_id")).getString("title");
                    screeningDate = new SimpleDateFormat("EEE dd MMM HH:mm").format(screening.getTimestamp("start_date"));
                    ticketNamesArray[i] = movieTitle + " " +screeningDate;
                }
            }
            Base.close();
        }
        void resetTicketsListData(){
            loadTicketsList();
            // load this and next week movie names into jList
            strings = ticketNamesArray;
        }
        public TicketBooking getTicketBookingAtIndex(int index) {
            return ticketsList.get(index);
        }
        public int getSize() {
            return strings.length;
        }
        public Object getElementAt(int index) {
            return strings[index];
        }
    }
    
    TicketBooking getCurrentlySelectedTicketBooking() {
        return ticketListData.getTicketBookingAtIndex(ticketsJList.getSelectedIndex());
    }
    
    
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ticketsJList = new javax.swing.JList();
        printTicketButton = new javax.swing.JButton();
        goBackButton = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 0, 20)); // NOI18N
        jLabel1.setText("Select a ticket to print");

        ticketsJList.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jScrollPane1.setViewportView(ticketsJList);

        printTicketButton.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        printTicketButton.setText("Print Selected Ticket");
        printTicketButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printTicketButtonActionPerformed(evt);
            }
        });

        goBackButton.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        goBackButton.setText("< Return to Main Screen");
        goBackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                goBackButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jScrollPane1))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(goBackButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(printTicketButton))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 193, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(printTicketButton, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(goBackButton, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void goBackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_goBackButtonActionPerformed
        this.parentFrame.showCard("homePageCard");
    }//GEN-LAST:event_goBackButtonActionPerformed

    private void printTicketButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printTicketButtonActionPerformed
        Base.open("com.mysql.jdbc.Driver", "jdbc:mysql://db4free.net:3306/picturehouse", "picturehouse", "65CEerFwXESQmL9nDaE");
        getCurrentlySelectedTicketBooking().print();
        Base.close();
        updateView();
        JOptionPane.showMessageDialog(this, "Your tickets has been printed! Collect it from the tray below.");
    }//GEN-LAST:event_printTicketButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton goBackButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton printTicketButton;
    private javax.swing.JList ticketsJList;
    // End of variables declaration//GEN-END:variables
}
